---
import HeaderLink from "./HeaderLink.astro";
import {SITE_MAIN_TITLE} from "../config";

export interface Props {
  title?: string;
}

const {title = SITE_MAIN_TITLE} = Astro.props;
---

<header>
  <div class="container">
    <h2><a href="/">{title}</a></h2>
    <nav class="menu">
      <ul>
        <li><a href="/blog">Articles</a></li>
        <li><a href="/projects">Portfolio</a></li>
        <li><a href="/contact">Get in Touch</a></li>
      </ul>
    </nav>

    <button class="theme-mode"
      id="lightIcon"
      tabindex="0"
      aria-label="Active light mode theme"
      title="Active light mode theme"
    >
      <svg aria-label="Sun" height="100%" width="100%" viewBox="0 0 182 182"
        ><path
          d="M49.828 91.317c0 22.662 18.393 41.054 41.054 41.054 22.662 0 41.054-18.392 41.054-41.054 0-22.661-18.392-41.053-41.054-41.053-22.661 0-41.054 18.392-41.054 41.053Zm49.265 82.108v-16.421c0-4.516-3.695-8.211-8.21-8.211-4.517 0-8.211 3.695-8.211 8.211v16.421c0 4.516 3.694 8.211 8.21 8.211 4.516 0 8.211-3.695 8.211-8.211Zm0-147.794V9.21c0-4.516-3.695-8.211-8.21-8.211-4.517 0-8.211 3.695-8.211 8.21v16.422c0 4.516 3.694 8.211 8.21 8.211 4.516 0 8.211-3.695 8.211-8.21ZM8.774 99.528h16.422c4.516 0 8.21-3.695 8.21-8.21 0-4.516-3.694-8.211-8.21-8.211H8.774c-4.515 0-8.21 3.695-8.21 8.21 0 4.516 3.695 8.211 8.21 8.211Zm147.795 0h16.421c4.516 0 8.211-3.695 8.211-8.21 0-4.516-3.695-8.211-8.211-8.211h-16.421c-4.516 0-8.211 3.695-8.211 8.21 0 4.516 3.695 8.211 8.211 8.211Zm-126.61 41.136c-3.203 3.203-3.203 8.457 0 11.578 3.201 3.202 8.456 3.202 11.576 0l8.704-8.704c3.202-3.202 3.202-8.457 0-11.577-3.202-3.12-8.457-3.202-11.577 0l-8.704 8.703ZM131.525 39.097c-3.202 3.202-3.202 8.457 0 11.577 3.202 3.202 8.457 3.202 11.577 0l8.703-8.703c3.203-3.202 3.203-8.457 0-11.577-3.202-3.203-8.457-3.203-11.577 0l-8.703 8.703Zm-89.99-8.704c-3.203-3.202-8.458-3.202-11.578 0-3.202 3.203-3.202 8.458 0 11.578l8.704 8.703c3.202 3.202 8.457 3.202 11.577 0 3.12-3.202 3.202-8.457 0-11.577l-8.703-8.704Zm101.567 101.568c-3.202-3.202-8.457-3.202-11.577 0-3.202 3.202-3.202 8.457 0 11.577l8.703 8.704c3.202 3.202 8.457 3.202 11.577 0 3.12-3.203 3.203-8.458 0-11.578l-8.703-8.703Z"
        ></path>
      </svg>
    </button>
    <button class="theme-mode"
      id="darkIcon"
      tabindex="0"
      aria-label="Activate dark mode theme"
      title="Activate dark mode theme"
    >
      <svg aria-label="Moon" height="100%" width="100%" viewBox="0 0 24 24"
        ><path
          d="M12 3a9 9 0 1 0 9 9c0-.46-.04-.92-.1-1.36a5.389 5.389 0 0 1-4.4 2.26 5.403 5.403 0 0 1-3.14-9.8c-.44-.06-.9-.1-1.36-.1Z"
        ></path>
      </svg>
    </button>
    <button
      id="menubtn"
      tabindex="0"
      aria-label="Open menu"
      title="Open menu"
      style="background:none;border:none;cursor:pointer"
    >
      <svg
        aria-label="Menu"
        height="24"
        width="24"
        style="stroke:rgb(var(--text))"
        viewBox="0 0 32 32"
      >
        <path
          style="fill:none;stroke:inherit;stroke-width:2;stroke-linecap:round;stroke-miterlimit:10;"
          d="M4.949,6.996h22.192 M4.949,15.996h22.192 M4.949,24.996h22.192"
        ></path>
      </svg>
      <svg
        aria-label="Close menu"
        height="24"
        width="24"
        style="stroke:rgb(var(--text))"
        viewBox="0 0 32 32"
      >
        <path
          style="fill:none;stroke:inherit;stroke-width:2;stroke-linecap:round;stroke-miterlimit:10;"
          d="M1,23.666L16.093,8.334L31,23.666"></path>
      </svg>
    </button>
  </div>
</header>
<script>
  // set/get cookie functions
  function setCookie(cname, cvalue) {
    var d = new Date();
    d.setTime(d.getTime() + 365 * 24 * 60 * 60 * 1000);
    var expires = "expires=" + d.toUTCString();
    document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
  }
  function getCookie(cname) {
    var name = cname + "=";
    var decodedCookie = decodeURIComponent(document.cookie);
    var ca = decodedCookie.split(";");
    for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == " ") {
        c = c.substring(1);
      }
      if (c.indexOf(name) == 0) {
        return c.substring(name.length, c.length);
      }
    }
    return false;
  }

  document.addEventListener("DOMContentLoaded", function () {
    // check cookie for theme mode
    if (getCookie("theme") == "dark") {
      document.body.classList.remove("light");
      document.body.classList.add("dark");
    } else if (getCookie("theme") == "light") {
      document.body.classList.remove("dark");
      document.body.classList.add("light");

      // check system theme mode
    } else if (
      window.matchMedia &&
      window.matchMedia("(prefers-color-scheme: dark)").matches
    ) {
      document.body.classList.remove("light");
      document.body.classList.add("dark");
      setCookie("theme", "dark");
    } else {
      document.body.classList.remove("dark");
      document.body.classList.add("light");
      setCookie("theme", "light");
    }
  });

  // toggle theme mode button click event
  document.querySelectorAll("button.theme-mode").forEach(function (button) {
    button.addEventListener("click", function () {
      console.log("theme button");
      document.body.classList.toggle("dark");
      document.body.classList.toggle("light");

      // set theme mode in cookie
      setCookie(
        "theme",
        document.body.classList.contains("dark") ? "dark" : "light"
      );
    });
  });

  // duplicate the <nav class="menu"> for mobile menu and append it next sibiling of <header>
  var mobileMenu = document.querySelector("nav.menu").cloneNode(true);
  mobileMenu.classList.add("mobile-menu");
  document.querySelector("header").insertAdjacentElement("afterend", mobileMenu);

  // Menu button
  document.querySelector("#menubtn").addEventListener("click", function () {
    document.querySelector("header").classList.toggle("open");
    document.querySelector("nav.mobile-menu").classList.toggle("open");
    document.querySelector("body").classList.toggle("no-scroll");
  });
</script>
