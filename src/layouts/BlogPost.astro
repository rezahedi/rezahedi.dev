---
import BaseHead from '@components/BaseHead.astro';
import Header from '@components/Header.astro';
import Footer from '@components/Footer.astro';
import TOC from '@components/TOC.astro';
import Author from '@components/Author.astro';

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate?: string;
		updatedDate?: string;
		image?: string;
		author?: {
			name: string;
			handler: string;
			avatar: string;
			link: string;
		}
	},
	headings: {
		slug: string;
		text: string;
		depth: number;
	}[],
	url: string;
}

const {
	content: { title, description, pubDate, updatedDate, image, author },
	headings,
	url
} = Astro.props;
---

<html lang="en">
<head>
	<BaseHead title={title} description={description} image={(image ? image : url+'.png')} />
	<style>
	.title {
		font-size: 2em;
		margin: 0.25em 0 0;
	}
	</style>
</head>

<body class="dark blog">
	<Header />
	<main>
		<header class="article-header">
			<div class="container">
				<div class="article-title">
					<h2>Articles</h2>
					<h1 class="title">{title}</h1>
					{pubDate && <time>{pubDate}</time>}
				</div>
			</div>
		</header>

		<div class="container">
			<article>
				<nav class="article-toc">
					{headings && headings.length > 0 && (
						<>
							<h3>Table of Content</h3>
							<TOC headings={headings} />
						</>
					)}
					{author && <Author {...author} />}
				</nav>
				{
					updatedDate && (
						<div>
							Last updated on <time>{updatedDate}</time>
						</div>
					)
				}
				<div class="article-content">
					<slot />
				</div>
			</article>
		</div>
	</main>
	<Footer />
</body>
</html>
<script>
addIntersectionObserver();

function addIntersectionObserver() {
	const observer = new IntersectionObserver((sections) => {
		console.log('sections', sections);
		sections.forEach((section) => {
			const heading = section.target.querySelector('h2, h3, h4, h5');
			if (!heading) return;
			const id = heading.getAttribute('id');

			// Get the link to this section's heading
			const link = document.querySelector(`nav.toc li a[href="#${id}"]`);
			if (!link) return;

			// Add/remove the .active class based on whether the
			// section is visible
			const addRemove = section.intersectionRatio > 0 ? 'add' : 'remove';
			link.classList[addRemove]('active');
		});
	});

	document.querySelectorAll('.article-content section').forEach((section) => {
		observer.observe(section);
	})
}
</script>
